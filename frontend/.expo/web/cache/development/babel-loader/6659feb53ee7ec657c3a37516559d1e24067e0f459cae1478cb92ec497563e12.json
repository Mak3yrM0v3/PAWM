{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var navigation = useNavigation();\n  var handleGoToRegister = function handleGoToRegister() {\n    navigation.navigate(\"Register\");\n  };\n  var handleLogin = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(\"http://localhost:3000/login\", {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: email,\n            password: password\n          })\n        });\n        if (response.status === 200) {\n          var data = yield response.json();\n          var token = data.token;\n          localStorage.setItem(\"token\", token);\n          setEmail(' ');\n          setPassword(' ');\n          navigation.navigate(\"Dashboard\");\n        } else {\n          console.error('Errore durante il login');\n          window.alert('Credenziali Errate');\n        }\n      } catch (error) {\n        console.error('Errore durante il login:', error);\n      }\n    });\n    return function handleLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.logo,\n      children: \"YuriShortUrl\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(Pressable, {\n      style: styles.loginButton,\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        style: styles.loginButtonText,\n        children: \"Accedi\"\n      })\n    }), _jsx(Pressable, {\n      style: styles.loginButton,\n      onPress: handleGoToRegister,\n      children: _jsx(Text, {\n        style: styles.loginButtonText,\n        children: \"Registrati\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\"\n  },\n  logo: {\n    fontSize: 36,\n    color: \"#1877F2\",\n    marginBottom: 20\n  },\n  input: {\n    width: 300,\n    height: 40,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingLeft: 10\n  },\n  loginButton: {\n    backgroundColor: \"#1877F2\",\n    width: 300,\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  loginButtonText: {\n    color: \"white\"\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Pressable","StyleSheet","useNavigation","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","navigation","handleGoToRegister","navigate","handleLogin","_ref","_asyncToGenerator","response","fetch","method","headers","body","JSON","stringify","status","data","json","token","localStorage","setItem","console","error","window","alert","apply","arguments","style","styles","container","children","logo","input","placeholder","onChangeText","text","secureTextEntry","loginButton","onPress","loginButtonText","create","flex","justifyContent","alignItems","backgroundColor","fontSize","color","marginBottom","width","height","borderColor","borderWidth","paddingLeft","borderRadius"],"sources":["C:/Users/Wallrider09/Desktop/PAWM/frontend/login.js"],"sourcesContent":["// Import necessary dependencies\r\nimport React, { useState } from \"react\";\r\nimport { View, Text, TextInput, Pressable, StyleSheet } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\n// Define LoginScreen component\r\nconst LoginScreen = () => {\r\n  // Setup useState hooks to handle email and password\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // Use navigation from react navigation\r\n  const navigation = useNavigation();\r\n\r\n  const handleGoToRegister = () => {\r\n    // Navigation function to Register screen\r\n    navigation.navigate(\"Register\");\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      // Send POST request to login endpoint\r\n      const response = await fetch(\"http://localhost:3000/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          email,\r\n          password,\r\n        }),\r\n      });\r\n  \r\n      if (response.status === 200) {\r\n        // If login successful, store the returned token\r\n        const data = await response.json();\r\n        const token = data.token;\r\n        localStorage.setItem(\"token\", token);\r\n        // Clear form fields after successful login.\r\n        setEmail(' ');\r\n        setPassword(' ');\r\n        // Navigate to Dashboard\r\n        navigation.navigate(\"Dashboard\");\r\n      } else {\r\n        // If login unsuccessful, log the error and alert the user\r\n        console.error('Errore durante il login');\r\n        window.alert('Credenziali Errate');\r\n      }\r\n    } catch (error) {\r\n      // Log any login error\r\n      console.error('Errore durante il login:', error);\r\n      \r\n    }\r\n  };\r\n  \r\n  // Render the LoginScreen component  \r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.logo}>YuriShortUrl</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        onChangeText={(text) => setEmail(text)}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        secureTextEntry={true}\r\n        onChangeText={(text) => setPassword(text)}\r\n      />\r\n      <Pressable style={styles.loginButton} onPress={handleLogin}>\r\n        <Text style={styles.loginButtonText}>Accedi</Text>\r\n      </Pressable>\r\n      <Pressable style={styles.loginButton} onPress={handleGoToRegister}>\r\n        <Text style={styles.loginButtonText}>Registrati</Text>\r\n      </Pressable>\r\n    </View>\r\n  );\r\n};\r\n\r\n// Styles for components\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  logo: {\r\n    fontSize: 36,\r\n    color: \"#1877F2\",\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    width: 300,\r\n    height: 40,\r\n    borderColor: \"gray\",\r\n    borderWidth: 1,\r\n    marginBottom: 10,\r\n    paddingLeft: 10,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: \"#1877F2\",\r\n    width: 300,\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n  },\r\n  loginButtonText: {\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\n// Export default LoginScreen component\r\nexport default LoginScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}